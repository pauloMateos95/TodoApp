{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/ui/Navbar.js","helpers/prepareTodos.js","actions/todos.js","components/todo/TodoModal.js","actions/ui.js","components/todo/TodoScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","reducers/todoReducer.js","store/store.js","TodoApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","to","RegisterScreen","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","Navbar","useSelector","state","auth","onClick","clear","prepareTodos","events","map","date","moment","toString","prepareNewTodo","event","eventLoaded","todoAddNew","todoDelete","todoToggle","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","initEvent","title","toDate","done","TodoModal","modalOpen","ui","dateStart","setDateStart","titleValid","setTitleValid","formValues","setFormValues","closeModal","isOpen","onRequestClose","style","overlayClassName","trim","length","getState","id","_id","console","log","autoComplete","TodoScreen","todos","todo","useEffect","handleDelete","handleToggle","PrivateRoute","isAuthenticated","Component","component","rest","props","PublicRoute","AppRouter","checking","text","allowOutsideClick","showCancelButton","showConfirmButton","willOpen","showLoading","close","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","TodoApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f76c416.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\n\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch ( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}\n\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch ( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n\n}","\n\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    todoStartAddNew: '[event] Start add new',\n    todoAddNew: '[todo] Add new',\n    todoDelete: '[todo] Delete',\n    todoToggle: '[todo] toggle',\n    eventLoaded: '[event] Events loaded',\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\n\n\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ){\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    };\n};\n\nexport const startRegister = ( email, password, name ) => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ){\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n    };\n};\n\nexport const startChecking = () => {\n    return async ( dispatch ) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ){\n            localStorage.setItem( 'token', body.token );\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n            dispatch( checkingFinish() );\n        }\n\n    };\n};\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( logout() ); \n\n    };\n};\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n});\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nconst logout = () => ({\n    type: types.authLogout\n});","import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startLogin } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'paulo@gmail.com',\n        lPassword: '123456'\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n\n        dispatch( startLogin( lEmail, lPassword ) );\n\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Sign In</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                        <Link to=\"/register\">\n                            Create new account\n                        </Link>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Ceci',\n        rEmail: 'ceci@gmail.com',\n        rPassword: '123456',\n        rPassword2: '123456'\n    });\n\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if( rPassword !== rPassword2 ){\n            return Swal.fire('Error', 'Passwords should match', 'error');\n        }\n\n        dispatch( startRegister( rEmail, rPassword, rName ) );\n\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Sign up</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Name\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                name=\"rPassword\"\n                                value={ rPassword }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Confirm password\"\n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Create account\" />\n                        </div>\n\n                        <Link to=\"/login\" className=\"link\">\n                            Already have an account?\n                        </Link>\n\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const { name } = useSelector(state => state.auth);\n    const dispatch = useDispatch();\n\n    const handleLogout = () => {\n\n        dispatch( startLogout() );\n\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","import moment from 'moment';\n\n\nexport const prepareTodos = ( events ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            date: moment( e.date ).toString()\n        })\n    )\n\n}\n\nexport const prepareNewTodo = ( event ) => {\n\n    event.date = moment(event.date).toString();\n\n    return {\n        ...event\n    }\n\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareNewTodo, prepareTodos } from \"../helpers/prepareTodos\";\nimport { types } from \"../types/types\";\n\n\nexport const todoStartAddNew = ( event ) => {\n    return async ( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n\n            const resp = await fetchConToken( 'events', event, 'Post' );\n            const body = await resp.json();\n\n            const events = prepareNewTodo(body.event);\n\n            if ( body.ok ) {\n                event.id = events.id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                event.date = events.date\n                \n                dispatch( todoAddNew( event ) );\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nexport const eventStartLoading = () => {\n    return async ( dispatch ) => {\n\n        try {\n\n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareTodos(body.events);\n\n            dispatch( eventLoaded( events ) );\n            \n        } catch (error) {\n            \n        }\n\n    }\n}\n\nexport const todoStartUpdate = ( event ) => {\n    return async (dispatch) => {\n\n        try {\n\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( todoToggle( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\nexport const todoStartDelete = ( event ) => {\n    return async ( dispatch ) => {\n\n        try {\n\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( todoDelete( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n}\n\n\nconst eventLoaded = ( events ) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nconst todoAddNew = ( event ) => ({\n    type: types.todoAddNew,\n    payload: event\n});\n\nconst todoDelete = ( event ) => ({\n    type: types.todoDelete,\n    payload: event\n});\n\nconst todoToggle = ( event ) => ({\n    type: types.todoToggle,\n    payload: event\n});","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { todoStartAddNew } from '../../actions/todos';\n\nimport './modal.css';\n\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\nModal.setAppElement('#root');\n\n\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    date: now.toDate(),\n    done: false\n}\n\n\nexport const TodoModal = () => {\n\n    const { modalOpen } = useSelector(state => state.ui);\n    const dispatch = useDispatch();\n\n    const [dateStart, setDateStart] = useState( now.toDate() );\n    const [titleValid, setTitleValid] = useState( true );\n\n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { title } = formValues;\n\n    const handleInputChange = ({ target }) => {\n\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n\n    }\n\n    const closeModal = () => {\n        dispatch( uiCloseModal() );\n        setFormValues( initEvent );\n    }\n\n    const handleDueDate = (e) => {\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            date: e\n        });\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n\n        if ( title.trim().length < 1 ) {\n            return setTitleValid(false);\n        }\n\n        dispatch( todoStartAddNew( formValues ) );\n\n        setTitleValid(true);\n        closeModal();\n\n    }\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> New task </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Task due date</label>\n                    <DateTimePicker\n                        onChange={ handleDueDate }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Task</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\n                        placeholder=\"Title\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Save</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import { types } from \"../types/types\";\n\n\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { Navbar } from '../ui/Navbar';\nimport './todo.css';\nimport { TodoModal } from './TodoModal';\nimport { eventStartLoading, todoStartDelete, todoStartUpdate } from '../../actions/todos';\n\n\n\nexport const TodoScreen = () => {\n\n    const dispatch = useDispatch();\n    const { todos } = useSelector(state => state.todo);\n    const { uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [ dispatch ])\n\n    const handleAdd = () => {\n        dispatch( uiOpenModal() );\n    }\n\n    const handleDelete = ( e ) => {\n        dispatch( todoStartDelete(e) );\n    }\n\n    const handleToggle = ( e ) => {\n        e.done = !e.done\n\n        dispatch( todoStartUpdate(e) );\n    }\n\n\n    return (\n        <div>\n            <Navbar />\n\n            <div className=\"container\">\n\n                <div className=\"row justify-content-center\">\n                    <h1>To do List</h1>\n                </div>\n\n                <div className=\"row justify-content-center py-3\">\n                    <button\n                        onClick={ handleAdd }\n                        className=\"btn btn-success\"\n                    >\n                        Add new task\n                    </button>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <ul className=\"list-group list-group-flush\">\n                            {\n                                todos.map( (todo)=> (\n\n                                    ( uid === todo.user._id ) ?\n                                        <li\n                                            key={ todo.id }\n                                            className=\"list-group-item\"\n                                        > \n                                            <p \n                                                className={ `${ todo.done && 'complete' }` }\n                                                onClick={ () => handleToggle( todo ) }\n                                            >\n                                                <strong>Task: </strong> { todo.title }\n                                            </p>\n                                            <p\n                                                className={ `${ todo.done && 'complete' }` }\n                                                onClick={ () => handleToggle( todo ) }\n                                            >\n                                                <strong>Due date: </strong> { todo.date }\n                                            </p>\n                                            <button\n                                                onClick={ () => handleDelete( todo ) }\n                                                className=\"btn btn-danger\"\n                                            >\n                                                Delete\n                                            </button>\n                                        </li> :\n                                        false\n                                ))\n                            }\n                        </ul>\n                    </div>\n                </div>\n\n            </div>\n\n            <TodoModal />\n\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? <Component { ...props } />\n                    : ( <Redirect to='/login' /> )\n            )}\n        \n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ ( props ) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to='/' /> )\n                    : (<Component { ...props } />)\n            )}\n        \n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect,\n  } from \"react-router-dom\";\nimport Swal from 'sweetalert2';\nimport { startChecking } from '../actions/auth';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\nimport { TodoScreen } from '../components/todo/TodoScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector(state => state.auth);\n\n    useEffect(() => {\n\n        dispatch( startChecking() );\n        \n    }, [dispatch])\n\n    if ( checking ) {\n        Swal.fire({\n            title: 'Loading...',\n            text: 'Please Wait',\n            allowOutsideClick: false,\n            showCancelButton: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading();\n            }\n        });\n    }\n\n    if (!checking) {\n        Swal.close();\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n                    <PublicRoute \n                        exact \n                        path=\"/Register\" \n                        component={ RegisterScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ TodoScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\n\n\nconst initialState = {\n    checking: true\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { todoReducer } from \"./todoReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    todo: todoReducer,\n    auth: authReducer\n})","import { types } from '../types/types';\n\n\n// const initialState = {\n//     todos: [{\n//         title: 'Pasear al perro',\n//         date: moment().toDate(),\n//         done: false,\n//         id: new Date().getTime(),\n//         user: {\n//             _id: '123',\n//             name: 'Paulo'\n//         }\n//     }]\n// };\n\n\n\nexport const todoReducer = ( state = { todos:[] }, action ) => {\n\n    switch ( action.type ) {\n\n        case types.todoAddNew:\n            return {\n                ...state,\n                todos: [\n                    ...state.todos,\n                    action.payload\n                ]\n            }\n        \n        case types.todoDelete:\n            return {\n                ...state,\n                todos: state.todos.filter(\n                    todo => ( todo.id !== action.payload.id )\n                )\n            };\n\n        case types.todoToggle:\n            return {\n                ...state,\n            };\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                todos: [ ...action.payload ]\n            }\n\n        default:\n            return state;\n    }\n\n}","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\n\nconst composeEnhancers = ( typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const TodoApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './TodoApp';\n\n\nReactDOM.render(\n        <TodoApp />,\n    document.getElementById('root')\n);"],"sourceRoot":""}